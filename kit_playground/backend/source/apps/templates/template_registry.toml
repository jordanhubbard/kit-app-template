# Template Registry Configuration
# Defines all available templates and their organization

[registry]
version = "2.0.0"
description = "Enhanced Kit App Template Registry with hierarchical organization and self-documentation"

# Template discovery paths - where to find template.toml files
[registry.discovery]
paths = [
    "applications/*/template.toml",
    "extensions/*/template.toml",
    "extensions/*/*/template.toml",
    "microservices/*/template.toml",
    "components/*/template.toml",
    "components/*/*/template.toml"
]

# Template type definitions
[registry.types]
application = { description = "Standalone runnable applications", icon = "üöÄ", standalone = true }
extension = { description = "Reusable extension components", icon = "üß©", standalone = false }
microservice = { description = "Headless API services", icon = "‚öôÔ∏è", standalone = true }
component = { description = "Non-standalone building blocks", icon = "üîß", standalone = false }

# Template categories for better organization
[registry.categories]
editor = { description = "Interactive editing applications", parent = "application" }
viewer = { description = "Content viewing applications", parent = "application" }
authoring = { description = "Content creation applications", parent = "application" }
exploration = { description = "Content exploration applications", parent = "application" }
api = { description = "API and service applications", parent = "microservice" }
python = { description = "Python-based extensions", parent = "extension" }
cpp = { description = "C++ native extensions", parent = "extension" }
bindings = { description = "Language binding extensions", parent = "extension" }
setup = { description = "Application setup components", parent = "component" }
streaming = { description = "Streaming capability components", parent = "component" }

# Compatibility matrix
[registry.compatibility]
platforms = ["linux-x86_64", "windows-x86_64"]
min_kit_version = "108.0.0"
supported_languages = ["python", "cpp", "c++", "configuration"]

# Template relationships and dependencies
[registry.relationships]
# Applications that require setup extensions
"omni_usd_composer.requires" = ["omni_usd_composer_setup"]
"omni_usd_explorer.requires" = ["omni_usd_explorer_setup"]
"omni_usd_viewer.requires" = ["omni_usd_viewer_setup", "omni_usd_viewer_messaging"]
"kit_service.requires" = ["kit_service_setup"]

# Extensions that work best together
"basic_python_extension.suggests" = ["basic_python_ui_extension"]
"basic_cpp_extension.suggests" = ["basic_python_binding"]

# Application layers that can be applied
"streaming_layers" = ["omni_default_streaming", "nvcf_streaming", "omni_gdn_streaming"]