# Basic Python Extension Template
# Minimal Python extension foundation

[metadata]
name = "basic_python_extension"
display_name = "Basic Python Extension"
type = "extension"
category = "python"
description = "Minimal definition of an Omniverse Python Extension. Starting point for Python-based extensions"
version = "1.0.0"
author = "NVIDIA Omniverse"
license = "LicenseRef-NvidiaProprietary"

[metadata.compatibility]
platforms = ["linux-x86_64", "windows-x86_64"]
min_kit_version = "108.0.0"
languages = ["python"]

[metadata.tags]
tags = ["python", "extension", "minimal", "foundation", "basic"]

[template]
class = "ExtensionTemplate"
source_dir = "../../extensions/basic_python/template"

[variables]
extension_name = "my_company.my_python_extension"
extension_display_name = "My Python Extension"
version = "0.1.0"

[documentation]
overview = """
The Basic Python Extension Template provides a foundation for building Python-based
extensions within the NVIDIA Omniverse ecosystem. This template offers best practices
and structure for easy integration with the Omniverse Kit SDK.
"""

use_cases = [
    "Reusable Python extensions for Kit applications",
    "Custom Python-based functionality",
    "Integration with Python libraries",
    "Rapid prototyping of extension ideas"
]

key_features = [
    "Best practices foundation",
    "Integration with build/test/packaging tooling",
    "Required setup code for Omniverse Kit SDK",
    "Example test structure"
]

getting_started = """
1. Run: ./repo.sh template new basic_python_extension --name my_company.my_ext
2. Add extension to an application's .kit file
3. Build: ./repo.sh build
4. Test: ./repo.sh test
"""

[dependencies]
required_extensions = []
optional_extensions = []

[deployment]
supports_packaging = true
supports_containerization = true
requires_host_application = true

[build]
requires_build = false  # Pure Python
supports_debug = true
supports_release = true
supports_testing = true

[integration]
# How this extension integrates with applications
requires_host_app = true
can_be_standalone = false
supported_app_types = ["application", "microservice"]